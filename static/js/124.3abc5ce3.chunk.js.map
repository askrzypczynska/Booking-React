{"version":3,"file":"static/js/124.3abc5ce3.chunk.js","mappings":"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","sources":["pages/Profile/ProfileDetails/ProfileDetails.js","pages/Profile/MyHotels/MyHotels.js","pages/Profile/Profile.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport LoadingButton from \"../../../components/UI/LoadingButton/LoadingButton\";\r\nimport { validateEmail } from \"../../../helpers/validations\";\r\nimport useAuth from \"../../../hooks/useAuth\";\r\nimport axios from \"../../../axios-auth\";\r\n\r\nexport default function ProfileDetails(props) {\r\n    const [auth, setAuth] = useAuth();\r\n    const [email, setEmail] = useState(auth.email)\r\n    const [password, setPassword] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n    const [errors, setErrors] = useState({\r\n        email: '',\r\n        password: ''\r\n    })\r\n    const [success, setSuccess] = useState(false);\r\n    const buttonDisabled = Object.values(errors).filter(x => x).length;\r\n\r\n    const submit = async (e) => {\r\n        e.preventDefault();\r\n        setLoading(true)\r\n\r\n        try {\r\n            const data = {\r\n                idToken: auth.token,\r\n                email: email,\r\n                returnSecureToken: true\r\n            };\r\n            if (password) {\r\n                data.password = password;\r\n            }\r\n            const res = await axios.post('accounts:update', data);\r\n            setSuccess(true);\r\n            setAuth({\r\n                email: res.data.email,\r\n                token: res.data.idToken,\r\n                userID: res.data.localId,\r\n            })\r\n        } catch (ex) {\r\n            console.log(ex.response);      \r\n        }\r\n\r\n        setLoading(false)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (validateEmail(email)) {\r\n            setErrors({...errors, email: \"\"})\r\n        } else {\r\n            setErrors({...errors, email: \"Niepoprawny email\"})\r\n        }\r\n    }, [email])\r\n\r\n    useEffect(() => {\r\n        if (password.length >= 4 || password.length == 0) {\r\n            setErrors({...errors, password: \"\"});\r\n        } else {\r\n            setErrors({...errors, password: \"Wymagane 4 znaki\"});\r\n        }\r\n    }, [password])\r\n\r\n\r\n    return (\r\n        <form onSubmit={submit}>\r\n\r\n            {success ? (\r\n                <div className=\"alert alert-success\">Dane Zapisane</div>)\r\n            : null}\r\n            \r\n            <div className=\"form-group\">\r\n                <label>Email</label>\r\n                <input \r\n                    type=\"email\"\r\n                    value={email}\r\n                    onChange={e => setEmail(e.target.value)} \r\n                    className={`form-control ${errors.email ? 'is-invalid' : 'is-valid'}`}\r\n                />\r\n                <div className=\"invalid-feedback\">\r\n                    {errors.email}\r\n                </div>\r\n                <div className=\"valid-feedback\">\r\n                    Email poprawny\r\n                </div>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label>Has≈Ço</label>\r\n                <input \r\n                    type=\"password\" \r\n                    value={password}\r\n                    onChange={e => setPassword(e.target.value)} \r\n                    className={`form-control ${errors.password ? 'is-invalid' : ''}`}\r\n                />\r\n                <div className=\"invalid-feedback\">\r\n                    {errors.password}\r\n                </div>\r\n            </div>\r\n            <LoadingButton loading={loading} label=\"Zaloguj\" disabled={buttonDisabled}>Zapisz</LoadingButton>\r\n        </form>\r\n    )\r\n}","import { useEffect, useState } from \"react\";\r\nimport { Link, useRouteMatch } from \"react-router-dom\"\r\nimport axios from \"../../../axios\";\r\nimport { ObjectToArrayWithId } from \"../../../helpers/objects\";\r\nimport useAuth from \"../../../hooks/useAuth\";\r\n\r\nexport default function MyHotels(props) {\r\n    const [auth] = useAuth();\r\n    const { url } = useRouteMatch();\r\n    const [hotels, setHotels] = useState([]);\r\n\r\n    const fetchHotels = async () => {\r\n        try {\r\n            const res = await axios.get('/hotels.json');\r\n            const newHotel = ObjectToArrayWithId(res.data)\r\n                            .filter(hotel => hotel.user_id === auth.userID);\r\n            setHotels(newHotel);\r\n        } catch (ex) {\r\n            console.log(ex.response);\r\n        }\r\n    }\r\n\r\n    const deleteHandler = async id => {\r\n        try {\r\n            await axios.delete(`/hotels/${id}.json`)\r\n            setHotels(hotels.filter(x => x.id !== id))\r\n        } catch (ex) {\r\n            console.log(ex.response);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchHotels();\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            {hotels ? (\r\n                <table className=\"table\">\r\n                    <thead>\r\n                        <th>Nazwa</th>\r\n                        <th>Status</th>\r\n                        <th>Opcje</th>\r\n                    </thead>\r\n                    <tbody>\r\n                        {hotels.map(hotel => (\r\n                            <tr>\r\n                                <td>{hotel.name}</td>\r\n                                <td>\r\n                                    {hotel.status == 1\r\n                                        ? <span className=\"badge bg-success text-light\">Aktywny</span>\r\n                                        : <span className=\"badge bg-secondary text-light\">Ukryty</span>\r\n                                    }\r\n                                </td>\r\n                                <td>\r\n                                    <Link to={`/profil/hotele/edytuj/${hotel.id}`} className=\"btn btn-outline-primary\">Edytuj</Link>\r\n                                    <button onClick={() => deleteHandler(hotel.id)} className=\"ml-2 btn btn-outline-danger\">Usu≈Ñ</button>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            ) : (<p>Nie masz jeszcze ≈ºadnego hotelu.</p>)}\r\n            <Link to={`${url}/dodaj`} className=\"btn btn-primary\">Dodaj hotel</Link>\r\n        </div>\r\n    )\r\n}","import ProfileDetails from \"./ProfileDetails/ProfileDetails\";\r\nimport MyHotels from \"./MyHotels/MyHotels\";\r\nimport { Switch, Route, NavLink, useRouteMatch } from \"react-router-dom\";\r\n\r\nexport default function Profile(props) {\r\n    const { path, url } = useRouteMatch();\r\n\r\n    // throw new Error('Problem z internetem')\r\n\r\n    return (\r\n        <div className=\"card\">\r\n            <div className=\"card-header\">\r\n                <h2>M√≥j profil</h2>\r\n            </div>\r\n            <div className=\"card-body\">\r\n                <ul className=\"nav nav-tabs\">\r\n                    <li className=\"nav-item\">\r\n                        <NavLink className=\"nav-link\" exact to={`${url}`}>Profil</NavLink>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <NavLink className=\"nav-link\" to={`${url}/hotele`}>Hotele</NavLink>\r\n                    </li>\r\n                </ul>\r\n\r\n                <div className=\"pt-4\">\r\n                    <Switch>\r\n                        <Route path={`${path}/hotele`} component={MyHotels}/>\r\n                        <Route path={`${path}`} component={ProfileDetails} />\r\n                    </Switch>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}"],"names":["ProfileDetails","props","_useAuth","useAuth","_useAuth2","_slicedToArray","auth","setAuth","_useState","useState","email","_useState2","setEmail","_useState3","_useState4","password","setPassword","_useState5","_useState6","loading","setLoading","_useState7","_useState8","errors","setErrors","_useState9","_useState10","success","setSuccess","buttonDisabled","Object","values","filter","x","length","submit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","data","res","wrap","_context","prev","next","preventDefault","idToken","token","returnSecureToken","axios","sent","userID","localId","t0","console","log","response","stop","_x","apply","arguments","useEffect","validateEmail","_objectSpread","_jsxs","onSubmit","children","_jsx","className","type","value","onChange","target","concat","LoadingButton","label","disabled","MyHotels","url","useRouteMatch","hotels","setHotels","fetchHotels","newHotel","ObjectToArrayWithId","hotel","user_id","deleteHandler","_ref2","_callee2","id","_context2","map","name","status","Link","to","onClick","Profile","_useRouteMatch","path","NavLink","exact","Switch","Route","component"],"sourceRoot":""}